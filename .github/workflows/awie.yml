name: awie

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "centreon-awie/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "centreon-awie/**"
    tags:
      - centreon-awie-*

env:
  module: awie

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon-awie/www/modules/centreon-awie/conf.php

  veracode-analysis:
    needs: [get-version]
    uses: ./.github/workflows/veracode-analysis.yml
    with:
      module_directory: centreon-awie
      module_name: centreon-awie
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      stability: ${{ needs.get-version.outputs.stability }}
    secrets:
      veracode_api_id: ${{ secrets.VERACODE_API_ID }}
      veracode_api_key: ${{ secrets.VERACODE_API_KEY }}
      veracode_srcclr_token: ${{ secrets.VERACODE_SRCCLR_TOKEN }}

  package:
    needs: [get-version]

    if: ${{ needs.get-version.outputs.stability != 'stable' }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - package_extension: rpm
            image: packaging-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-bullseye
            distrib: bullseye

    uses: ./.github/workflows/package.yml
    with:
      base_directory: centreon-awie
      spec_file: centreon-awie/packaging/centreon-awie.spectemplate
      package_extension: ${{ matrix.package_extension }}
      image_name: ${{ matrix.image }}
      module_name: awie
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      release: ${{ needs.get-version.outputs.release }}
      commit_hash: ${{ github.sha }}
      cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
    secrets:
      registry_username: ${{ secrets.DOCKER_REGISTRY_ID }}
      registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

  deliver-sources:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Deliver sources
        uses: ./.github/actions/release-sources
        with:
          bucket_directory: centreon-awie
          module_directory: centreon-awie
          module_name: centreon-awie
          major_version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

  delivery-rpm:
    needs: [get-version, package]
    if: ${{ contains(fromJson('["testing", "unstable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    environment: ${{ needs.get-version.outputs.environment }}

    strategy:
      matrix:
        distrib: [el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: awie
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}

  delivery-deb:
    needs: [get-version, package]
    if: ${{ contains(fromJson('["testing", "unstable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    environment: ${{ needs.get-version.outputs.environment }}

    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: awie
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}

  promote:
    needs: [get-version]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Promote ${{ matrix.distrib }} to stable
        uses: ./.github/actions/promote-to-stable
        with:
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          module: awie
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          stability: ${{ needs.get-version.outputs.stability }}

  check-stable-packages-availability:
    needs: [get-version]
    runs-on: [ubuntu-22.04]
    strategy:
      matrix:
        image: ["almalinux:8", "almalinux:9", "debian:bullseye"]
    container:
      image: ${{ matrix.image }}

    steps:
      - name: check packages for ${{ matrix.image }}
        run: |
          set -x
          # Set version
          VERSION=${{ needs.get-version.outputs.major_version }}
          # Set repo based on distrib
          case ${{ matrix.image }} in
            almalinux:8)
              dnf install -y epel-release
              dnf install -y dnf-plugins-core
              dnf config-manager --set-enabled powertools
              dnf config-manager --add-repo https://packages.centreon.com/rpm-standard/${VERSION}/el8/centreon-${VERSION}.repo
              dnf config-manager --set-enabled centreon-${VERSION}-testing*
              dnf install -y https://rpms.remirepo.net/enterprise/remi-release-8.rpm
              dnf module reset -y php
              dnf module install -y php:remi-8.1
              curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup \
                | bash -s -- --os-type=rhel --skip-check-installed --os-version=8 --mariadb-server-version="mariadb-10.5"
              dnf install -y mariadb-server mariadb

              dnf install centreon-${{ env.module }}
            ;;
            almalinux:9)
              dnf install -y dnf-plugins-core
              dnf install -y epel-release
              dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
              dnf config-manager --set-enabled 'crb'
              dnf config-manager --add-repo https://packages.centreon.com/rpm-standard/${VERSION}/el9/centreon-${VERSION}.repo
              dnf config-manager --set-enabled centreon-${VERSION}-testing*
              dnf module reset -y php
              dnf module install -y php:8.1
              curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup \
                | sudo bash -s -- --os-type=rhel --os-version=9 --mariadb-server-version="mariadb-10.5"
              dnf install -y mariadb-server mariadb

              dnf install centreon-${{ env.module }}
            ;;
            debian:bullseye)
              apt update && apt upgrade -y
              apt update && apt install -y lsb-release ca-certificates apt-transport-https software-properties-common wget gnupg2 curl sudo
              echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/sury-php.list
              wget -O- https://packages.sury.org/php/apt.gpg | gpg --dearmor | tee /etc/apt/trusted.gpg.d/php.gpg  > /dev/null 2>&1
              apt update
              curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bash -s -- --os-type=debian --os-version=11 --mariadb-server-version="mariadb-10.5"
              echo "deb https://packages.centreon.com/apt-standard-23.04-stable/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/centreon.list
              echo "deb https://packages.centreon.com/apt-plugins-stable/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/centreon-plugins.list
              wget -O- https://apt-key.centreon.com | gpg --dearmor | tee /etc/apt/trusted.gpg.d/centreon.gpg > /dev/null 2>&1
              apt update

              apt install -y centreon-${{ env.module }}
            ;;
          esac
        shell: bash
