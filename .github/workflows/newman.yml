name: Postman Tests

on:
  push:

jobs:
  postman_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: centreon/tests/rest_api
        
    env:
      CONTAINER_NAME: my_centreon_container
      CENTREON_URL: http://localhost
      CENTREON_IMAGE: docker.centreon.com/centreon/centreon-web-alma9:develop

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}
      
      - name: Install pnpm
        run: npm install pnpm -g

      - name: Install Dependencies
        run: pnpm install -f ./centreon/tests/rest_api/package.json

      - name: Start Centreon Web Container
        run: docker run --name $CONTAINER_NAME -d -p 4000:80 --health-cmd="curl -f $CENTREON_URL/ || exit 1" --health-interval=5s $CENTREON_IMAGE

      - name: Wait for Centreon Web Container to Start
        run: |
          npx wait-on http://localhost:4000/ --timeout 100000
        timeout-minutes: 5
      
      - name: Create Newman Directory
        run: mkdir -p centreon/tests/rest_api/newman

      - name: Run Postman Tests and Generate HTML and JSON Reports
        run: |
          environment_path="collections/Environment-for-Refactored-API-Test-Collection.json"
          collection_path="collections"
          report_directory="centreon/tests/rest_api/newman"
        
          # Initialize variables to store test results
          tests_passed=0
          tests_failed=0
          tests_skipped=0
        
          # Create a summary file (Markdown ou HTML) containing the Newman reports content
          echo "Robot Results" > centreon/tests/rest_api/newman_reports_summary.md
        
          # Iterate over each Postman collection file in the specified directory
          for collection_file in "$collection_path"/*.postman_collection.json; do
            # Extract the collection name from the file name
            collection_name=$(basename "$collection_file" .postman_collection.json)
        
            # Afficher le chemin exact du répertoire JSON
            echo "Chemin du répertoire JSON : $report_directory/${collection_name}.json"
        
            # Run Newman with the current collection file and generate both HTML and JSON reports
            pnpm newman run "$collection_file" -e "$environment_path" --reporters cli,htmlextra,json,json-summary --reporter-htmlextra-title "${collection_name// /_}" --reporter-htmlextra-export "${report_directory}/${collection_name}.html" --reporter-json-export "${report_directory}/${collection_name}.json" --reporter-json-summary-export "${report_directory}/${collection_name}-summary.json" || true

      
            echo "Chemin complet du fichier JSON après création : $(realpath "${report_directory}/${collection_name}.json")"
        
            # Extract test results from the JSON summary
            current_summary=$(cat "${report_directory}/${collection_name}-summary.json")
        
            # Add the summary to the overall report
            echo "Collection: ${collection_name}.json" >> "${report_directory}/newman_reports_summary.md"
            echo "$current_summary" >> "${report_directory}/newman_reports_summary.md"
        
            # Extract the relevant metrics from the summary
            tests_passed_current=$(echo "$current_summary" | jq -r '.tests.passed')
            tests_failed_current=$(echo "$current_summary" | jq -r '.tests.failed')
            tests_skipped_current=$(echo "$current_summary" | jq -r '.tests.skipped')
        
            tests_passed=$((tests_passed + tests_passed_current))
            tests_failed=$((tests_failed + tests_failed_current))
            tests_skipped=$((tests_skipped + tests_skipped_current))
          done
        
          # Set the Newman reports summary content as a GitHub environment variable
          echo "newman_reports_summary=$(cat ${report_directory}/newman_reports_summary.md)" >> $GITHUB_ENV
      

      - name: Upload HTML Reports
        uses: actions/upload-artifact@v2
        with:
          name: postman-html-reports
          path: centreon/tests/rest_api/newman/
        env:
          NODE_VERSION: 16

      - name: Continue to Next Collection
        if: ${{ always() }}
        run: echo "Continuing to the next collection..."

      - name: Display Newman Reports Summary
        run: echo "## Newman Reports Summary\n\n${{ env.newman_reports_summary }}" >> $GITHUB_ENV
