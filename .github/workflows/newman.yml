name: Postman Tests

on:
  push:
  
jobs:
  postman_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: Install Newman and Reporter
        run: | 
          npm install -g newman newman-reporter-htmlextra newman-reporter-text

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - name: Start Centreon Web Container
        run: |
          docker run --name centreon -d -p 4000:80 docker.centreon.com/centreon/centreon-web-alma9:develop
          # Add HEALTHCHECK instruction to the running container
          docker exec centreon bash -c "echo 'HEALTHCHECK --interval=5s --timeout=3s CMD curl -f http://localhost/' >> /etc/docker-healthcheck && chmod +x /etc/docker-healthcheck"
      
      - name: Install dockerize
        run: |
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
        working-directory: /tmp

       - name: Wait for Centreon Web Container to Start
       run: |
        ./dockerize -wait tcp://centreon:80 -timeout 5m
         echo "Centreon Web Container is healthy!"
 
      - name: Run Postman Tests and Generate HTML Report
        run: |
          environment_path="centreon/tests/rest_api/refactored_api_test_collection/Environment-for-Refactored-API-Test-Collection.json"
          collection_path="centreon/tests/rest_api/refactored_api_test_collection"

          # Create a directory to store HTML reports
          mkdir -p newman

          # Iterate over each Postman collection file in the specified directory
          for collection_file in "$collection_path"/*.postman_collection.json; do
            # Extract the collection name from the file name
            collection_name=$(basename "$collection_file" .postman_collection.json)

            # Run Newman with the current collection file and generate an HTML report
            newman run "$collection_file" -e "$environment_path" --reporters cli,htmlextra --reporter-htmlextra-title "$collection_name" --reporter-htmlextra-title "${collection_name// /_}" --reporter-htmlextra-export "newman/${collection_name}.html"  || true
          done

      - name: Upload HTML Reports
        uses: actions/upload-artifact@v2
        with:
          name: postman-html-reports
          path: ./newman/
        env:
          NODE_VERSION: 16

      - name: Continue to Next Collection
        if: ${{ always() }}
        run: echo "Continuing to the next collection..."
