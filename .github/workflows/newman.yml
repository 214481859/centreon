name: Postman Tests

on:
  push:

jobs:
  postman_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: centreon/tests/rest_api
        
    env:
      CONTAINER_NAME: my_centreon_container
      CENTREON_URL: http://localhost
      CENTREON_IMAGE: docker.centreon.com/centreon/centreon-web-alma9:develop

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}
      
      - name: Install pnpm
        run: npm install pnpm -g

      - name: Install Dependencies
        run: pnpm install -f ./centreon/tests/rest_api/package.json

      - name: Start Centreon Web Container
        run: docker run --name $CONTAINER_NAME -d -p 4000:80 --health-cmd="curl -f $CENTREON_URL/ || exit 1" --health-interval=5s $CENTREON_IMAGE

      - name: Wait for Centreon Web Container to Start
        run: |
          npx wait-on http://localhost:4000/ --timeout 100000
        timeout-minutes: 5
      
      - name: List contents of node_modules
        run: |
          ls -lR node_modules

      - name: Run Postman Tests and Generate HTML Report
        run: |
          environment_path="collections/Environment-for-Refactored-API-Test-Collection.json"
          collection_path="collections"
          report_directory="newman"

          # Create a directory to store HTML reports
          mkdir -p "$report_directory"

          # Initialize variables to store test results
          tests_passed=0
          tests_failed=0
          tests_skipped=0

          # Create a summary file (Markdown ou HTML) containing the Newman reports content
          echo "Robot Results" > newman_reports_summary.md

          # Iterate over each Postman collection file in the specified directory
          for collection_file in "$collection_path"/*.postman_collection.json; do
            # Extract the collection name from the file name
            collection_name=$(basename "$collection_file" .postman_collection.json)

            # Run Newman with the current collection file and generate an HTML report
            pnpm newman run "$collection_file" -e "$environment_path" --reporters cli,htmlextra,json --reporter-htmlextra-title "$collection_name" --reporter-htmlextra-title "${collection_name// /_}" --reporter-htmlextra-export "$report_directory/${collection_name}.html" --reporter-json-export "$report_directory/${collection_name}.json" || true

            # Extract test results from the JSON report
            current_results=$(jq -r '.run.stats.tests' "$report_directory/${collection_name}.json")

            # Extract the relevant metrics
            iterations=$(echo "$current_results" | jq -r '.iterations')
            requests=$(echo "$current_results" | jq -r '.requests')
            test_scripts=$(echo "$current_results" | jq -r '.test-scripts')
            prerequest_scripts=$(echo "$current_results" | jq -r '.prerequest-scripts')
            assertions=$(echo "$current_results" | jq -r '.assertions')
            total_run_duration=$(jq -r '.run.timings.duration' "$report_directory/${collection_name}.json")
            total_data_received=$(jq -r '.run.transfers.responseTotal' "$report_directory/${collection_name}.json")
            average_response_time=$(jq -r '.run.timings.responseAverage' "$report_directory/${collection_name}.json")

            # Add these metrics to the summary
            echo "" >> newman_reports_summary.md
            echo "Collection: $collection_name" >> newman_reports_summary.md
            echo "Iterations: $iterations" >> newman_reports_summary.md
            echo "Requests: $requests" >> newman_reports_summary.md
            echo "Test Scripts: $test_scripts" >> newman_reports_summary.md
            echo "Pre-request Scripts: $prerequest_scripts" >> newman_reports_summary.md
            echo "Assertions: $assertions" >> newman_reports_summary.md
            echo "Total Run Duration: $total_run_duration" >> newman_reports_summary.md
            echo "Total Data Received: $total_data_received" >> newman_reports_summary.md
            echo "Average Response Time: $average_response_time" >> newman_reports_summary.md
          done

          # Set the Newman reports summary content as a GitHub environment variable
          echo "newman_reports_summary=$(cat newman_reports_summary.md)" >> $GITHUB_ENV

        working-directory: centreon/tests/rest_api

      - name: Upload HTML Reports
        uses: actions/upload-artifact@v2
        with:
          name: postman-html-reports
          path: newman/
        env:
          NODE_VERSION: 16

      - name: Continue to Next Collection
        if: ${{ always() }}
        run: echo "Continuing to the next collection..."

      - name: Display Newman Reports Summary
        run: echo "## Newman Reports Summary\n\n${{ env.newman_reports_summary }}" >> $GITHUB_ENV
