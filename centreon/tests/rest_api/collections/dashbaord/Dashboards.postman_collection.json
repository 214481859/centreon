{
	"info": {
		"_postman_id": "c01b3b3d-7c7e-4ef1-a797-28cddd239192",
		"name": "Dashboards",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "28117716-c01b3b3d-7c7e-4ef1-a797-28cddd239192"
	},
	"item": [
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Create a new dashboard with name and description",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dashboardName\", \"Dashboard-Test-API-1002\");\r",
									"pm.collectionVariables.set(\"dashboardDescription\", \"Dashboard Description for API Test 1002\")"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "579fb965-b4b2-4ba5-930c-289276f04e6c"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A dashboard with name \" + pm.collectionVariables.get(\"dashboardName\") + \" and description \" + pm.collectionVariables.get(\"dashboardDescription\") + \" has successfully been created.\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    console.log('toto')\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"The dashboard features the properties that were set up in the creation request.\", function() {\r",
									"    pm.expect(responseJson.name).to.eql(pm.collectionVariables.get(\"dashboardName\"));\r",
									"    pm.expect(responseJson.description).to.eql(pm.collectionVariables.get(\"dashboardDescription\"));\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"dashboardID\", responseJson.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "61660ea3-d580-4b73-84d7-4f6b38f9eafb"
							}
						}
					],
					"id": "bf3dbd02-6006-4e23-ae77-d2523a7df2cc",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{dashboardName}}\",\n  \"description\": \"{{dashboardDescription}}\",\n  \"panels\": [],\n  \"refresh\": {\n    \"type\": \"global\",\n    \"interval\": null\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards"
							]
						}
					},
					"response": []
				}
			],
			"id": "25ed1f89-ad12-437a-a420-e48e3b6f4fc4"
		},
		{
			"name": "Dashboard widgets",
			"item": [
				{
					"name": "Adding status grid widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e24f63f2-5e90-4640-a479-9d318129047e"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a status grid widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "834d0bbd-789e-4d73-bc7d-146839ef859b"
							}
						}
					],
					"id": "f9733950-16db-410b-aa6c-04edd67fcf4c",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\":[\r\n       {\r\n          \"id\":null,\r\n          \"layout\":{\r\n             \"height\":3,\r\n             \"min_height\":3,\r\n             \"min_width\":3,\r\n             \"width\":12,\r\n             \"x\":0,\r\n             \"y\":0\r\n          },\r\n          \"name\":\"centreon-widget-statusgrid\",\r\n          \"widget_settings\":{\r\n             \"data\":{\r\n                \"resources\":[\r\n                   {\r\n                      \"resourceType\":\"host-group\",\r\n                      \"resources\":[\r\n                         {\r\n                            \"id\":53,\r\n                            \"name\":\"Linux-Servers\"\r\n                         }\r\n                      ]\r\n                   }\r\n                ]\r\n             },\r\n             \"options\":{\r\n                \"resourceType\":\"host\",\r\n                \"statuses\":[\r\n                   \"up\",\r\n                   \"down\"\r\n                ],\r\n                \"states\":[\r\n                ],\r\n                \"sortBy\":\"status_severity_code\",\r\n                \"tiles\":100,\r\n                \"refreshInterval\":\"default\",\r\n                \"description\":{\r\n                   \"content\":\"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Description for status grid\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                   \"enabled\":true\r\n                },\r\n                \"name\":\"Title For status grid\",\r\n                \"openLinksInNewTab\":true\r\n             }\r\n          },\r\n          \"widget_type\":\"/widgets/statusgrid\"\r\n       }\r\n    ]\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with status grid widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2d9a02d8-c241-4f8a-89c4-df105a82f93d"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-statusgrid\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7b539b10-bfd0-47f8-9372-1998b348a5e5"
							}
						}
					],
					"id": "67634a3d-74af-4c94-b71b-4fbdac24b0e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding single metric widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "689dc84b-0e3f-4691-b4a9-308a532d54ca"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a single metric widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "63af440f-ed34-4b1b-92ee-40ded8ee487c"
							}
						}
					],
					"id": "68c779ca-f611-4c3c-9cf9-d36e0926ca81",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"panels\": [\r\n    {\r\n      \"layout\": {\r\n        \"height\": 3,\r\n        \"min_height\": 3,\r\n        \"min_width\": 3,\r\n        \"width\": 12,\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      },\r\n      \"name\": \"centreon-widget-singlemetric\",\r\n      \"widget_settings\": {\r\n        \"data\": {\r\n          \"resources\": [\r\n            {\r\n              \"resourceType\": \"host\",\r\n              \"resources\": [\r\n                {\r\n                  \"id\": 14,\r\n                  \"poller_id\": 1,\r\n                  \"name\": \"Centreon-Server\",\r\n                  \"acknowledged\": false,\r\n                  \"address_ip\": \"127.0.0.1\",\r\n                  \"alias\": \"Monitoring Server\",\r\n                  \"check_attempt\": 1,\r\n                  \"checked\": true,\r\n                  \"display_name\": \"Centreon-Server\",\r\n                  \"execution_time\": 0.025543,\r\n                  \"icon_image\": \"\",\r\n                  \"icon_image_alt\": \"\",\r\n                  \"last_check\": \"2023-11-03T13:22:59+01:00\",\r\n                  \"last_hard_state_change\": \"2023-11-03T13:19:14+01:00\",\r\n                  \"last_state_change\": \"2023-11-03T13:19:14+01:00\",\r\n                  \"last_time_down\": null,\r\n                  \"last_time_unreachable\": null,\r\n                  \"last_time_up\": \"2023-11-03T13:23:04+01:00\",\r\n                  \"last_update\": \"2023-11-03T13:17:59+01:00\",\r\n                  \"max_check_attempts\": 5,\r\n                  \"output\": \"OK - 127.0.0.1 rta 0.035ms lost 0%\\n\",\r\n                  \"passive_checks\": false,\r\n                  \"state\": 0,\r\n                  \"state_type\": 1,\r\n                  \"timezone\": \"\",\r\n                  \"scheduled_downtime_depth\": 0,\r\n                  \"criticality\": null\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          \"metrics\": [\r\n            {\r\n              \"criticalHighThreshold\": 50,\r\n              \"criticalLowThreshold\": 0,\r\n              \"id\": 2,\r\n              \"name\": \"pl\",\r\n              \"unit\": \"%\",\r\n              \"warningHighThreshold\": 20,\r\n              \"warningLowThreshold\": 0\r\n            }\r\n          ]\r\n        },\r\n        \"options\": {\r\n          \"singleMetricGraphType\": \"text\",\r\n          \"threshold\": {\r\n            \"enabled\": true,\r\n            \"customCritical\": null,\r\n            \"criticalType\": \"default\",\r\n            \"customWarning\": null,\r\n            \"warningType\": \"default\",\r\n            \"baseColor\": null\r\n          },\r\n          \"refreshInterval\": \"default\",\r\n          \"valueFormat\": \"human\",\r\n          \"description\": {\r\n            \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[],\\\"direction\\\":null,\\\"format\\\":\\\"center\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n            \"enabled\": true\r\n          },\r\n          \"openLinksInNewTab\": true\r\n        }\r\n      },\r\n      \"widget_type\": \"/widgets/singlemetric\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with single metric widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7ec85068-5463-4247-8a92-39f6c8a69300"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-singlemetric\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response metrics are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].widget_settings.data.metrics[0].name\", \"pl\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1dbb4e68-4a1a-43fe-b442-f18ebaf197a4"
							}
						}
					],
					"id": "e0899d4e-d817-402b-ba1d-cc0ddab3c1c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding generic text widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f8ea9bee-96c9-490d-a986-b73858a30616"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a generic text widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ee8ffcbf-373e-45d6-893e-12654bd1e56b"
							}
						}
					],
					"id": "08afc26c-e8fc-4c45-bdfc-43c5d28f2b64",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 3,\r\n                \"min_height\": 1,\r\n                \"min_width\": 3,\r\n                \"width\": 12,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-generictext\",\r\n            \"widget_settings\": {\r\n                \"data\": {},\r\n                \"options\": {\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Postman description\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Postman tests\",\r\n                    \"openLinksInNewTab\": true\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/generictext\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with generic text widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0c363b94-944e-4263-9785-1966fda38430"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-generictext\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f5aacf69-7d65-49b5-98c5-4272254d6579"
							}
						}
					],
					"id": "137f67da-72e2-47f8-92b4-6b6f5f7a6329",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding metrics graph widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bbf80716-eeee-4695-9554-a21e7a5286e2"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a metrics graph widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0c92c254-abc4-433e-b1e3-a3613af25d30"
							}
						}
					],
					"id": "db8b3386-b921-4e38-8720-8ed147cd889d",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 4,\r\n                \"min_height\": 4,\r\n                \"min_width\": 6,\r\n                \"width\": 6,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-graph\",\r\n            \"widget_settings\": {\r\n                \"data\": {\r\n                    \"resources\": [\r\n                        {\r\n                            \"resourceType\": \"host-group\",\r\n                            \"resources\": [\r\n                                {\r\n                                    \"id\": 53,\r\n                                    \"name\": \"Linux-Servers\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"metrics\": [\r\n                        {\r\n                            \"criticalHighThreshold\": 400,\r\n                            \"criticalLowThreshold\": 0,\r\n                            \"id\": 1,\r\n                            \"name\": \"rta\",\r\n                            \"unit\": \"ms\",\r\n                            \"warningHighThreshold\": 200,\r\n                            \"warningLowThreshold\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"options\": {\r\n                    \"timeperiod\": {\r\n                        \"start\": null,\r\n                        \"end\": null,\r\n                        \"timePeriodType\": 1\r\n                    },\r\n                    \"threshold\": {\r\n                        \"enabled\": true,\r\n                        \"customCritical\": null,\r\n                        \"criticalType\": \"default\",\r\n                        \"customWarning\": null,\r\n                        \"warningType\": \"default\"\r\n                    },\r\n                    \"refreshInterval\": \"default\",\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Postman tests\",\r\n                    \"openLinksInNewTab\": true\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/graph\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with metrics graph widget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-graph\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f5d15327-ee39-4297-a994-fe83785971ea"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "436d0011-428c-46ab-8fef-7eb680d514a7"
							}
						}
					],
					"id": "f576af1d-f548-452e-9c82-bf78f0802d49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding top-buttom widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "928c675b-3a2c-41c9-9fb0-0216c01ffee3"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a top-buttom widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5a5b92fa-5fd6-45e8-bcb5-ec3dd6927450"
							}
						}
					],
					"id": "cf291016-ce0c-4bbc-bdbd-6817538ec0b4",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 3,\r\n                \"min_height\": 3,\r\n                \"min_width\": 3,\r\n                \"width\": 12,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-topbottom\",\r\n            \"widget_settings\": {\r\n                \"data\": {\r\n                    \"resources\": [\r\n                        {\r\n                            \"resourceType\": \"host-group\",\r\n                            \"resources\": [\r\n                                {\r\n                                    \"id\": 53,\r\n                                    \"name\": \"Linux-Servers\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"metrics\": [\r\n                        {\r\n                            \"criticalHighThreshold\": 400,\r\n                            \"criticalLowThreshold\": 0,\r\n                            \"id\": 1,\r\n                            \"name\": \"rta\",\r\n                            \"unit\": \"ms\",\r\n                            \"warningHighThreshold\": 200,\r\n                            \"warningLowThreshold\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"options\": {\r\n                    \"topBottomSettings\": {\r\n                        \"numberOfValues\": 10,\r\n                        \"order\": \"top\",\r\n                        \"showLabels\": true\r\n                    },\r\n                    \"valueFormat\": \"human\",\r\n                    \"threshold\": {\r\n                        \"enabled\": true,\r\n                        \"customCritical\": null,\r\n                        \"criticalType\": \"default\",\r\n                        \"customWarning\": null,\r\n                        \"warningType\": \"default\",\r\n                        \"baseColor\": null\r\n                    },\r\n                    \"refreshInterval\": \"default\",\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Postman tests\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Postman tests\",\r\n                    \"openLinksInNewTab\": true\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/topbottom\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with top-buttom widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8ab44bfc-316e-48e8-a204-ef85ef86e5f0"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-topbottom\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "103b9a86-6651-464b-92d5-769eda44a748"
							}
						}
					],
					"id": "c3413f4b-b143-429e-913b-691bd5ec2701",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding resource table widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cbded737-5701-4b07-bd82-19dab080b1e0"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a resource table widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "878e2f82-0377-4956-a1d7-bdb64bfcc16a"
							}
						}
					],
					"id": "59742686-efce-4a92-960c-2dfe6b1bca15",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 3,\r\n                \"min_height\": 3,\r\n                \"min_width\": 6,\r\n                \"width\": 6,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-resourcestable\",\r\n            \"widget_settings\": {\r\n                \"data\": {\r\n                    \"resources\": [\r\n                        {\r\n                            \"resourceType\": \"host-group\",\r\n                            \"resources\": [\r\n                                {\r\n                                    \"id\": 53,\r\n                                    \"name\": \"Linux-Servers\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"options\": {\r\n                    \"displayType\": \"all\",\r\n                    \"statuses\": [],\r\n                    \"states\": [\r\n                        \"unhandled_problems\"\r\n                    ],\r\n                    \"refreshInterval\": \"default\",\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":1,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Description\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1},{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\" for resource table widget\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Resource table widget\",\r\n                    \"openLinksInNewTab\": true\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/resourcestable\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with resource table  widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8015395c-3989-49fa-8d3b-d2aec5924c0c"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-resourcestable\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5df63beb-9a1e-4f38-acca-d41220284623"
							}
						}
					],
					"id": "89a406a4-8d14-44e0-8155-723c48b80f25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding group monitoring  widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6980cb8a-3b2d-4cc2-9f80-a1e045b320b1"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a group monitoring widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "20412564-d336-464c-9e21-2d53022780c7"
							}
						}
					],
					"id": "8505642c-bf87-41f8-9ddd-d20534561fb3",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 3,\r\n                \"min_height\": 3,\r\n                \"min_width\": 6,\r\n                \"width\": 6,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-groupmonitoring\",\r\n            \"widget_settings\": {\r\n                \"data\": {\r\n                    \"resources\": [\r\n                        {\r\n                            \"resourceType\": \"host-group\",\r\n                            \"resources\": [\r\n                                {\r\n                                    \"id\": 53,\r\n                                    \"name\": \"Linux-Servers\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"options\": {\r\n                    \"resourceTypes\": [\r\n                        \"host\",\r\n                        \"service\"\r\n                    ],\r\n                    \"statuses\": [\r\n                        \"1\",\r\n                        \"2\"\r\n                    ],\r\n                    \"refreshInterval\": \"default\",\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Description for group monitoring widget\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Group Monitoring widget\",\r\n                    \"openLinksInNewTab\": true,\r\n                    \"limit\": 10,\r\n                    \"page\": 0\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/groupmonitoring\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with group monitoring  widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "257f94d8-f75e-4ffb-bb02-264f272c91be"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-groupmonitoring\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "fab7040b-7d9a-43bd-a830-41c2b99b1047"
							}
						}
					],
					"id": "b913abc0-b1dc-4f74-8243-5f98d41cef05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding status chart widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "45bc8460-efd5-4dc9-8298-1725625e481b"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The PATCH request successfully adds a status chart widget with a 204 No Content response\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "782ff0c6-788e-4b81-9834-1212b9f94cc2"
							}
						}
					],
					"id": "d8d5f954-4d40-4f3d-a80f-34457622be4b",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"panels\": [\r\n        {\r\n            \"id\": null,\r\n            \"layout\": {\r\n                \"height\": 5,\r\n                \"min_height\": 5,\r\n                \"min_width\": 6,\r\n                \"width\": 6,\r\n                \"x\": 0,\r\n                \"y\": 0\r\n            },\r\n            \"name\": \"centreon-widget-statuschart\",\r\n            \"widget_settings\": {\r\n                \"data\": {\r\n                    \"resources\": [\r\n                        {\r\n                            \"resourceType\": \"host-group\",\r\n                            \"resources\": [\r\n                                {\r\n                                    \"id\": 53,\r\n                                    \"name\": \"Linux-Servers\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"options\": {\r\n                    \"displayType\": \"donut\",\r\n                    \"resourceTypes\": [\r\n                        \"host\",\r\n                        \"service\"\r\n                    ],\r\n                    \"unit\": \"percentage\",\r\n                    \"displayValues\": true,\r\n                    \"displayLegend\": true,\r\n                    \"refreshInterval\": \"default\",\r\n                    \"description\": {\r\n                        \"content\": \"{\\\"root\\\":{\\\"children\\\":[{\\\"children\\\":[{\\\"detail\\\":0,\\\"format\\\":1,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"Description\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1},{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\" for status chart\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1}],\\\"direction\\\":\\\"ltr\\\",\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"name\": \"Status chart\",\r\n                    \"openLinksInNewTab\": true\r\n                }\r\n            },\r\n            \"widget_type\": \"/widgets/statuschart\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting dashboard with status chart  widget",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c4d9098d-d063-42ae-b709-e1afaaecbed3"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dashboard successfully retrieved - Response status is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected structure\", function () {\r",
									"    pm.response.to.have.jsonBody(\"id\");\r",
									"    pm.response.to.have.jsonBody(\"name\");\r",
									"    pm.response.to.have.jsonBody(\"description\");\r",
									"    pm.response.to.have.jsonBody(\"created_by\");\r",
									"    pm.response.to.have.jsonBody(\"updated_by\");\r",
									"    pm.response.to.have.jsonBody(\"created_at\");\r",
									"    pm.response.to.have.jsonBody(\"updated_at\");\r",
									"    pm.response.to.have.jsonBody(\"panels\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\");\r",
									"    pm.response.to.have.jsonBody(\"refresh\");\r",
									"    pm.response.to.have.jsonBody(\"shares\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the expected values\", function () {\r",
									"    pm.response.to.have.jsonBody(\"name\", \"Dashboard-Test-API-1002\");\r",
									"    pm.response.to.have.jsonBody(\"own_role\", \"editor\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response panels are as expected\", function () {\r",
									"    pm.response.to.have.jsonBody(\"panels[0].name\", \"centreon-widget-statuschart\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1956d36c-6a55-4733-b0ac-1cb67e1d76b0"
							}
						}
					],
					"id": "2f1751ba-bffd-417a-afe4-86ba9be47a68",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "373aa32d-8b5e-4fe3-8e84-162fcf573c72"
		},
		{
			"name": "Cleaning up",
			"item": [
				{
					"name": "Delete dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"dashboard successfully deleted - Response status is 204 No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is empty after deletion\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.empty;\r",
									"})\r",
									"\r",
									"// Clean up request variables\r",
									"pm.variables.clear();\r",
									"\r",
									"// Optionally, you can log a message to indicate that the cleaning up has been done\r",
									"console.log('Cleaning up variables after the tests.');"
								],
								"type": "text/javascript",
								"id": "638058f9-df5c-41e1-a047-b35c6feb2bf3"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "543ef43b-b9d5-4f78-9835-aa40d3a4e0ea"
							}
						}
					],
					"id": "497c8945-73e3-4af8-b97d-ddc983287f7c",
					"protocolProfileBehavior": {
						"followAuthorizationHeader": true,
						"disableCookies": false,
						"disableUrlEncoding": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/configuration/dashboards/{{dashboardID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configuration",
								"dashboards",
								"{{dashboardID}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "2966b092-ed5a-4a4a-bbec-82cce61a10ef"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-AUTH-TOKEN",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"const moment = require('moment');",
					"if (!pm.globals.get(\"loginScriptExecuted\") || isTokenExpired()) {",
					"    pm.sendRequest({",
					"        url: pm.variables.replaceIn('{{baseUriCentreonApi}}/{{version}}/login'),",
					"        followRedirects: true,",
					"        encodeUrl: true,",
					"        useCookieJar: false,",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/json'",
					"        },",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({",
					"                \"security\": {",
					"                    \"credentials\": {",
					"                        \"login\": pm.variables.get(\"api_login\"),",
					"                        \"password\": pm.variables.get(\"api_password\")",
					"                    }",
					"                }",
					"            })",
					"        }",
					"    }, function (err, res) {",
					"        if (!err) {",
					"            pm.globals.set(\"token\", res.json().security.token);",
					"            pm.globals.set(\"tokenIssuedAt\", moment().toISOString());",
					"            pm.globals.set(\"loginScriptExecuted\", true);",
					"        } else {",
					"            console.error(\"Error during login request:\", err);",
					"            pm.globals.set(\"loginScriptExecuted\", false);",
					"        }",
					"    });",
					"}",
					"",
					"function isTokenExpired() {",
					"    const tokenIssuedAt = pm.globals.get(\"tokenIssuedAt\");",
					"    if (tokenIssuedAt) {",
					"        const issuedAtMoment = moment(tokenIssuedAt);",
					"        const currentMoment = moment();",
					"        const elapsedMinutes = currentMoment.diff(issuedAtMoment, 'minutes');",
					"        return elapsedMinutes >= 60; // If one hour or more has elapsed, the token is considered expired.",
					"    }",
					"    return true; //If the variable is not defined, the token is considered expired.",
					"}",
					""
				],
				"id": "5ed3a4f8-4510-4833-9a7e-df64e9fd6f8c"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "a96e6254-db81-4b25-8840-b46aaaf7181a"
			}
		}
	],
	"variable": [
		{
			"id": "5ef64d59-1c25-4672-ba60-5f822a9ee33a",
			"key": "dashboardName",
			"value": ""
		},
		{
			"id": "c72c5c6d-ac75-490c-bb6a-9717a5b56214",
			"key": "dashboardDescription",
			"value": ""
		},
		{
			"id": "3700fc9a-093a-4370-a2b3-b91f2fadb642",
			"key": "dashboardID",
			"value": ""
		},
		{
			"id": "e13824c3-d09a-435e-a44e-f1c9c29cc874",
			"key": "contactGroupName",
			"value": ""
		},
		{
			"id": "386c1ca8-6b64-44e2-aade-84a73bf41a32",
			"key": "contactGroupAlias",
			"value": ""
		},
		{
			"id": "501783bc-6b58-4c8b-be59-3a10017292c3",
			"key": "testUserName",
			"value": ""
		},
		{
			"id": "0f026839-7aac-4ecc-b187-170e97fcbd91",
			"key": "testUserLogin",
			"value": ""
		},
		{
			"id": "b6fa1f96-4284-4aef-8f38-d15f5f925f05",
			"key": "testUserEmail",
			"value": ""
		},
		{
			"id": "6438b0de-b561-4d74-a8c9-330cf73c4ec5",
			"key": "testUserPassword",
			"value": ""
		}
	]
}